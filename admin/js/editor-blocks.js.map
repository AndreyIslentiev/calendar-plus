{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./_src/admin/editor-shortcode/editor-blocks.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","registerBlockType","wp","blocks","createElement","useState","element","__","i18n","InspectorControls","editor","TextControl","RangeControl","SelectControl","PanelBody","__experimentalHeading","__experimentalView","__experimentalSpacer","__experimentalScrollable","__experimentalVStack","CheckboxControl","SearchControl","ToggleControl","components","withSelect","window","data","serverSideRender","ServerSideRender","CategorySelect","props","searchText","setSearchText","categories","items","setItems","selected","list","item","push","label","checked","indexOf","style","marginBottom","onChange","onSelect","elements","filtered","filter","toLowerCase","maxHeight","unshift","level","title","description","category","icon","src","attributes","time_format","dow_format","month_name_format","day_format","date_format","edit","select","getEntityRecords","per_page","categoryOptions","forEach","id","CalPlusBlocksOptions","calendar_image","initialOpen","setAttributes","options","save","event_id","block","EmptyResponsePlaceholder","help","type","events","default","past_events","display_location","display_excerpt","featured_image","layout","columns","selectedCategories","split","map","parseInt","trim","num","isNaN","eventsSettings","min","max","index","join"],"mappings":"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","file":"editor-blocks.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","const {registerBlockType} = wp.blocks;\r\nconst {createElement, useState} = wp.element;\r\nconst {__} = wp.i18n;\r\nconst {InspectorControls} = wp.editor;\r\nconst {\r\n    TextControl,\r\n    RangeControl,\r\n    SelectControl,\r\n    PanelBody,\r\n    __experimentalHeading,\r\n    __experimentalView,\r\n    __experimentalSpacer,\r\n    __experimentalScrollable,\r\n    __experimentalVStack,\r\n    CheckboxControl,\r\n    SearchControl,\r\n    ToggleControl\r\n} = wp.components;\r\nconst {withSelect} = window.wp.data;\r\nconst { serverSideRender: ServerSideRender } = wp;\r\n\r\nconst CategorySelect = function(props) {\r\n    const [ searchText, setSearchText ] = useState('');\r\n    const categories = props.categories ? props.categories : [];\r\n    const [ items, setItems ] = useState(categories);\r\n    const selected = props.selected ? props.selected : [];\r\n\r\n    const list = [];\r\n    for (const item of items) {\r\n\r\n        list.push(\r\n            createElement(\r\n                CheckboxControl,\r\n                {\r\n                    label: item.label,\r\n                    checked: selected.indexOf( item.value ) !== -1 ,\r\n                    key: item.label,\r\n                    style: { marginBottom: 5 },\r\n                    onChange: function(value) {\r\n                        if ( props.onSelect ) {\r\n                            props.onSelect( item.value, value );\r\n                        }\r\n                    }\r\n                }\r\n            ),\r\n        );\r\n    }\r\n    var elements = [\r\n        createElement(\r\n            __experimentalSpacer,\r\n            { marginBottom: 5 },\r\n            createElement(\r\n                SearchControl,\r\n                {\r\n                    value: searchText,\r\n                    onChange: function(value) {\r\n                        const filtered = props.categories.filter(function(item){\r\n                            return item.label.toLowerCase().indexOf(value) !== -1;\r\n                        });\r\n                        setItems(filtered);\r\n                        setSearchText(value);\r\n                    }\r\n                }\r\n            ),\r\n        ),\r\n        createElement(\r\n            __experimentalScrollable,\r\n            {\r\n                style: { maxHeight: 200 }\r\n            },\r\n            createElement(__experimentalVStack, {}, list)\r\n        )\r\n    ];\r\n    if ( props.label ) {\r\n        elements.unshift(\r\n            createElement(\r\n                __experimentalSpacer,\r\n                { marginBottom: 5 },\r\n                createElement( __experimentalHeading, { level: 5 }, props.label )\r\n            )\r\n        );\r\n    }\r\n\r\n     return createElement(\r\n         __experimentalSpacer,\r\n         { marginBottom: 10 },\r\n         createElement(__experimentalView, {}, elements)\r\n     );\r\n}\r\n\r\nregisterBlockType( 'calendar-plus/calendar', {\r\n    title: __( 'Events Calendar' ),\r\n    description: __( 'Displays full events calendar.' ),\r\n    category:  'widgets',\r\n    icon: {\r\n        src: 'calendar-alt',\r\n    },\r\n    attributes: {\r\n        category: {},\r\n        time_format: {},\r\n        dow_format: {},\r\n        month_name_format: {},\r\n        day_format: {},\r\n        date_format: {}\r\n    },\r\n    edit: withSelect( function( select ) {\r\n        return {\r\n            categories: select('core').getEntityRecords('taxonomy', 'calendar_event_category', {per_page: -1})\r\n        };\r\n    } )( function( props ) {\r\n        var categoryOptions = [ { value: '', label: __( 'All' ) } ];\r\n        \r\n        if( props.categories ) {\r\n            props.categories.forEach((category) => {\r\n                categoryOptions.push({value:category.id, label:category.name});\r\n            });\r\n        }\r\n        \r\n        return createElement('div', {}, [\r\n            createElement( 'div', {}, createElement( 'img', {src: CalPlusBlocksOptions.calendar_image} ) ),\r\n            createElement( InspectorControls, {},\r\n                createElement( PanelBody, { title: __( 'Calendar Settings' ), initialOpen: true },\r\n                    createElement(SelectControl, {\r\n                        value: props.attributes.category,\r\n                        label: __( 'Category' ),\r\n                        onChange: function(value){\r\n                            props.setAttributes( { category: value } );\r\n                        },\r\n                        options: categoryOptions\r\n                    }),\r\n                    createElement(SelectControl, {\r\n                        value: props.attributes.time_format,\r\n                        label: __( 'Time format' ),\r\n                        onChange: function(value){\r\n                            props.setAttributes( { time_format: value } );\r\n                        },\r\n                        options: [\r\n                            {value: 'g:i a', label: '11:00 pm'},\r\n                            {value: 'H:i', label: '23:00'},\r\n                        ]\r\n                    }),\r\n                    createElement(SelectControl, {\r\n                        value: props.attributes.dow_format,\r\n                        label: __( 'Day of the week format' ),\r\n                        onChange: function(value){\r\n                            props.setAttributes( { dow_format: value } );\r\n                        },\r\n                        options: [\r\n                            {value: 'l', label: 'Sunday'},\r\n                            {value: 'D', label: 'Sun'},\r\n                        ]\r\n                    }),\r\n                    createElement(SelectControl, {\r\n                        value: props.attributes.month_name_format,\r\n                        label: __( 'Month name format' ),\r\n                        onChange: function(value){\r\n                            props.setAttributes( { month_name_format: value } );\r\n                        },\r\n                        options: [\r\n                            {value: 'M', label: 'Jan'},\r\n                            {value: 'F', label: 'January'},\r\n                        ]\r\n                    }),\r\n                    createElement(SelectControl, {\r\n                        value: props.attributes.day_format,\r\n                        label: __( 'Day format' ),\r\n                        onChange: function(value){\r\n                            props.setAttributes( { day_format: value } );\r\n                        },\r\n                        options: [\r\n                            {value: 'd', label: '09'},\r\n                            {value: 'j', label: '9'},\r\n                        ]\r\n                    }),\r\n                    createElement(SelectControl, {\r\n                        value: props.attributes.date_format,\r\n                        label: __( 'Date format' ),\r\n                        onChange: function(value){\r\n                            props.setAttributes( { date_format: value } );\r\n                        },\r\n                        options: [\r\n                            {value: 'd/m', label: '15/09'},\r\n                            {value: 'j/n', label: '15/9'},\r\n                            {value: 'm/d', label: '09/15'},\r\n                            {value: 'n/j', label: '9/15'},\r\n                        ]\r\n                    }),\r\n                )\r\n            )\r\n        ] )\r\n    } ),\r\n    save(){\r\n        return null;\r\n    }\r\n});\r\n\r\nregisterBlockType( 'calendar-plus/event', {\r\n    title: __( 'Single Event' ),\r\n    description: __( 'Displays single calendar event.' ),\r\n    category:  'widgets',\r\n    icon: {\r\n        src: 'calendar-alt',\r\n    },\r\n    attributes: {\r\n        event_id: {},\r\n    },\r\n    edit(props){\r\n        return createElement('div', {}, [\r\n            createElement( 'div', {}, createElement( ServerSideRender, {\r\n                block: \"calendar-plus/event\",\r\n                attributes: props.attributes,\r\n                EmptyResponsePlaceholder: function() {\r\n                    return createElement( 'div', {}, 'test' );\r\n                }\r\n            } ) ),\r\n            createElement( InspectorControls, {},\r\n                createElement( PanelBody, { title: __( 'Event Settings' ), initialOpen: true },\r\n                    createElement(TextControl, {\r\n                        value: props.attributes.event_id,\r\n                        label: __( 'Event Id' ),\r\n                        help: __( 'Use Events > Events on admin area to search for your event by title or ID' ),\r\n                        type: 'number',\r\n                        onChange: function(value){\r\n                            props.setAttributes( { event_id: value } );\r\n                        },\r\n                    }),\r\n                )\r\n            )\r\n        ] )\r\n    },\r\n    save(){\r\n        return null;\r\n    }\r\n});\r\n\r\nregisterBlockType( 'calendar-plus/events-list', {\r\n    title: __( 'Events List' ),\r\n    description: __( 'Displays events list.' ),\r\n    category:  'widgets',\r\n    icon: {\r\n        src: 'calendar-alt',\r\n    },\r\n    attributes: {\r\n        events: {\r\n            default: 5\r\n        },\r\n        past_events: {\r\n            default: false\r\n        },\r\n        category: {\r\n            default: ''\r\n        },\r\n        display_location: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        display_excerpt: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        featured_image: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        layout: {\r\n            default: 'list'\r\n        },\r\n        columns: {\r\n            default: 2\r\n        }\r\n    },\r\n    edit: withSelect( function( select ) {\r\n        return {\r\n            categories: select('core').getEntityRecords('taxonomy', 'calendar_event_category', {per_page: -1})\r\n        };\r\n    } )( function( props ) {\r\n        var categoryOptions = [ /* { value: 0, label: __( 'All' ) } */ ];\r\n        var selectedCategories = props.attributes.category\r\n            .split( ',' )\r\n            .map(\r\n                function( value ){\r\n                    return parseInt( value.trim() );\r\n                }\r\n            )\r\n            .filter(\r\n                function(num) {\r\n                    return ! isNaN( num );\r\n                }\r\n            );\r\n        \r\n        if( props.categories ) {\r\n            props.categories.forEach((category) => {\r\n                categoryOptions.push({value:category.id, label:category.name});\r\n            });\r\n        }\r\n        const eventsSettings = [\r\n            createElement(RangeControl, {\r\n                value: props.attributes.events,\r\n                label: __( 'Number of events' ),\r\n                onChange: function(value){\r\n                    props.setAttributes( { events: value } );\r\n                },\r\n                min: 1,\r\n                max: 100,\r\n            }),\r\n            createElement(\r\n                CategorySelect,\r\n                {\r\n                    label: __( 'Category' ),\r\n                    categories: categoryOptions,\r\n                    selected: selectedCategories,\r\n                    onSelect: function(id, value) {\r\n                        /*\r\n                        if ( ! id ) {\r\n                            if ( value ) {\r\n                                selectedCategories = props.categories.map(\r\n                                    function( item ) {\r\n                                        return item.id;\r\n                                    }\r\n                                );\r\n                                selectedCategories.push( 0 );\r\n                                props.setAttributes( { category: selectedCategories.join( ',' ) } );\r\n                            } else {\r\n                                props.setAttributes( { category: '' } );\r\n                            }\r\n\r\n\r\n                            return;\r\n                        }\r\n                        */\r\n\r\n                        const index = selectedCategories.indexOf( id );\r\n\r\n                        if ( value && index === -1 ) {\r\n                            selectedCategories.push( id );\r\n                        } else if ( index !== -1 ) {\r\n                            delete selectedCategories[ index ];\r\n                        }\r\n                        props.setAttributes( {\r\n                            category: selectedCategories.join( ',' )\r\n                        } );\r\n                    }\r\n                }\r\n            ),\r\n            createElement(ToggleControl, {\r\n                value: props.attributes.past_events,\r\n                checked: props.attributes.past_events,\r\n                label: __( 'Display past events' ),\r\n                onChange: function(value){\r\n                    props.setAttributes( { past_events: value } );\r\n                }\r\n            }),\r\n            createElement(__experimentalView, {}, [\r\n                createElement(\r\n                    __experimentalSpacer,\r\n                    {},\r\n                    createElement(\r\n                        __experimentalHeading,\r\n                        { level: 5 },\r\n                        __( 'Choose fields to display' )\r\n                    ),\r\n                ),\r\n                createElement(\r\n                    CheckboxControl,\r\n                    {\r\n                        label: __( 'Location' ),\r\n                        checked: props.attributes.display_location,\r\n                        onChange: function(value) {\r\n                            props.setAttributes( { display_location: value } );\r\n                        }\r\n                    }\r\n                ),\r\n                createElement(\r\n                    CheckboxControl,\r\n                    {\r\n                        label: __( 'Excerpt' ),\r\n                        checked: props.attributes.display_excerpt,\r\n                        onChange: function(value) {\r\n                            props.setAttributes( { display_excerpt: value } );\r\n                        }\r\n                    }\r\n                ),\r\n                createElement(\r\n                    CheckboxControl, \r\n                    {\r\n                        label: __( 'Featured image' ),\r\n                        checked: props.attributes.featured_image,\r\n                        onChange: function(value){\r\n                            props.setAttributes( {featured_image: value} );\r\n                        }\r\n                    }\r\n                ),\r\n            ]),\r\n            createElement(SelectControl, {\r\n                value: props.attributes.layout,\r\n                label: __( 'Layout' ),\r\n                options: [\r\n                    {value: 'list', label: __('List')},\r\n                    {value: 'grid', label: __('Grid')}\r\n                ],\r\n                onChange: function(value){\r\n                    props.setAttributes( { layout: value } );\r\n                }\r\n            }),\r\n        ];\r\n        if(props.attributes.layout === 'grid') {\r\n            eventsSettings.push(createElement(SelectControl, {\r\n                value: props.attributes.columns,\r\n                label: __( 'Grid size' ),\r\n                options: [\r\n                    {value: 2, 'label': __('2 Columns')},\r\n                    {value: 3, 'label': __('3 Columns')},\r\n                    {value: 4, 'label': __('4 Columns')}\r\n                ],\r\n                onChange: function(value){\r\n                    props.setAttributes( { columns: parseInt(value) } );\r\n                }\r\n            }));\r\n        }\r\n\r\n        return createElement('div', {}, [\r\n            createElement( 'div', {}, createElement( ServerSideRender, {\r\n                block: \"calendar-plus/events-list\",\r\n                attributes: props.attributes,\r\n            } ) ),\r\n            createElement( InspectorControls, {},\r\n                createElement( PanelBody, { title: __( 'Events Settings' ), initialOpen: true },\r\n                    ...eventsSettings\r\n                )\r\n            )\r\n        ] )\r\n    } ),\r\n    save(){\r\n        return null;\r\n    }\r\n});"],"sourceRoot":""}